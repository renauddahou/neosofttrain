# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Default


steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'


- task: PowerShell@2
  displayName: 'Generate Version'
  inputs:
    targetType: 'inline'
    script: |
      $buildId = "$(Build.BuildId)"
      $date = Get-Date -Format "yyyyMMdd"
      $version = "1.0.$date.$buildId"
      Write-Host "##vso[task.setvariable variable=BuildVersion]$version"
      Write-Host "Generated version: $version"

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: CmdLine@2
  displayName: 'Test code quality'
  inputs:
    script: |
      echo Test code quality
      python -m pip install yapf flake8
      python -m yapf -i app.py
      python -m flake8 app.py
    workingDirectory: '$(Build.ArtifactStagingDirectory)'
  continueOnError: false
  
- task: CmdLine@2
  displayName: 'Build Docker images'
  inputs:
    script: |
      echo Build Docker images
      docker build -t flaskapp:$(BuildVersion) .
    workingDirectory: '$(Build.ArtifactStagingDirectory)'
  continueOnError: false
- task: CmdLine@2
  displayName: 'Test container'
  inputs:
    script: |
      echo Test container
      docker run --rm -p 8000:8000 flaskapp bash -c "python3 app.py & sleep 3 && curl -X POST -d 'name=Renaud' http://localhost:5000/hello"
    workingDirectory: '$(Build.ArtifactStagingDirectory)'
  continueOnError: false
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
    replaceExistingArchive: true


- task: CmdLine@2
  inputs:
    script: |
      echo Write your commands here
      az webapp deploy --name testyflask --resource-group renaudgroup --src-path "$(Build.ArtifactStagingDirectory)" --type static
